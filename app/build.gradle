plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    signingConfigs {
        debug {
            storeFile file(localProperties['storeFilePath'])
            storePassword localProperties['storePassword']
            keyAlias localProperties['keyAlias']
            keyPassword localProperties['keyPassword']
        }
        release {
            storeFile file(localProperties['storeFilePath'])
            storePassword localProperties['storePassword']
            keyAlias localProperties['keyAlias']
            keyPassword localProperties['keyPassword']
        }
    }

    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.qihuan.photowidget"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 38
        versionName "1.37"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            buildConfigField "String", "APP_CENTER_SECRET", "\"${localProperties['appCenterSecretRelease']}\""
        }
        debug {
            signingConfig signingConfigs.debug

            buildConfigField "String", "APP_CENTER_SECRET", "\"${localProperties['appCenterSecretDebug']}\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "photowidget_${variant.buildType.name}_${defaultConfig.versionName}.apk"
        }
    }
}

kapt {
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas")
        arg("room.incremental", "true")
        arg("room.expandProjection", "true")
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.google.android.material:material:1.6.0-rc01'
    implementation 'androidx.activity:activity-ktx:1.3.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    def paging_version = "3.1.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    def room_version = "2.4.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // WorkManager 执行时会触发 AppWidgetProvider.onUpdate() 回调，导致不可控的行为。
    // 在 AppWidgetProvider.onUpdate() 通过 WorkManager 执行刷新微件，会导致无限循环，所以暂时改用 JobScheduler 代替。
    // 具体可见：https://medium.com/intive-developers/toss-a-coin-to-your-widget-or-dont-part-1-of-3-188c39d50b66
    // def work_version = "2.7.1"
    // implementation("androidx.work:work-runtime-ktx:$work_version")

    implementation 'com.github.yalantis:ucrop:2.2.7'
    implementation 'id.zelory:compressor:3.0.1'
    implementation "com.github.skydoves:colorpickerview:2.2.4"

    def glide_version = "4.13.1"
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"

    def appCenterSdkVersion = '4.3.1'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
}